{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [{"tool": {"driver": {"name": "Checkov", "version": "3.2.352", "informationUri": "https://checkov.io", "rules": [{"id": "CKV_K8S_15", "name": "Image Pull Policy should be Always", "shortDescription": {"text": "Image Pull Policy should be Always"}, "fullDescription": {"text": "Image Pull Policy should be Always"}, "help": {"text": "Image Pull Policy should be Always\nResource: Deployment.default.release-name-admiral-server"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-14"}, {"id": "CKV_K8S_35", "name": "Prefer using secrets as files over secrets as environment variables", "shortDescription": {"text": "Prefer using secrets as files over secrets as environment variables"}, "fullDescription": {"text": "Prefer using secrets as files over secrets as environment variables"}, "help": {"text": "Prefer using secrets as files over secrets as environment variables\nResource: Deployment.default.release-name-admiral-server"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-33"}, {"id": "CKV_K8S_21", "name": "The default namespace should not be used", "shortDescription": {"text": "The default namespace should not be used"}, "fullDescription": {"text": "The default namespace should not be used"}, "help": {"text": "The default namespace should not be used\nResource: Deployment.default.release-name-admiral-server"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-20"}, {"id": "CKV_K8S_43", "name": "Image should use digest", "shortDescription": {"text": "Image should use digest"}, "fullDescription": {"text": "Image should use digest"}, "help": {"text": "Image should use digest\nResource: Deployment.default.release-name-admiral-server"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-39"}, {"id": "CKV_K8S_37", "name": "Minimize the admission of containers with capabilities assigned", "shortDescription": {"text": "Minimize the admission of containers with capabilities assigned"}, "fullDescription": {"text": "Minimize the admission of containers with capabilities assigned"}, "help": {"text": "Minimize the admission of containers with capabilities assigned\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-34"}, {"id": "CKV_K8S_31", "name": "Ensure that the seccomp profile is set to docker/default or runtime/default", "shortDescription": {"text": "Ensure that the seccomp profile is set to docker/default or runtime/default"}, "fullDescription": {"text": "Ensure that the seccomp profile is set to docker/default or runtime/default"}, "help": {"text": "Ensure that the seccomp profile is set to docker/default or runtime/default\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-29"}, {"id": "CKV_K8S_8", "name": "Liveness Probe Should be Configured", "shortDescription": {"text": "Liveness Probe Should be Configured"}, "fullDescription": {"text": "Liveness Probe Should be Configured"}, "help": {"text": "Liveness Probe Should be Configured\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-7"}, {"id": "CKV_K8S_20", "name": "Containers should not run with allowPrivilegeEscalation", "shortDescription": {"text": "Containers should not run with allowPrivilegeEscalation"}, "fullDescription": {"text": "Containers should not run with allowPrivilegeEscalation"}, "help": {"text": "Containers should not run with allowPrivilegeEscalation\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-19"}, {"id": "CKV_K8S_40", "name": "Containers should run as a high UID to avoid host conflict", "shortDescription": {"text": "Containers should run as a high UID to avoid host conflict"}, "fullDescription": {"text": "Containers should run as a high UID to avoid host conflict"}, "help": {"text": "Containers should run as a high UID to avoid host conflict\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-37"}, {"id": "CKV_K8S_22", "name": "Use read-only filesystem for containers where possible", "shortDescription": {"text": "Use read-only filesystem for containers where possible"}, "fullDescription": {"text": "Use read-only filesystem for containers where possible"}, "help": {"text": "Use read-only filesystem for containers where possible\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-21"}, {"id": "CKV_K8S_9", "name": "Readiness Probe Should be Configured", "shortDescription": {"text": "Readiness Probe Should be Configured"}, "fullDescription": {"text": "Readiness Probe Should be Configured"}, "help": {"text": "Readiness Probe Should be Configured\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-8"}, {"id": "CKV_K8S_28", "name": "Minimize the admission of containers with the NET_RAW capability", "shortDescription": {"text": "Minimize the admission of containers with the NET_RAW capability"}, "fullDescription": {"text": "Minimize the admission of containers with the NET_RAW capability"}, "help": {"text": "Minimize the admission of containers with the NET_RAW capability\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-27"}, {"id": "CKV_K8S_29", "name": "Apply security context to your pods and containers", "shortDescription": {"text": "Apply security context to your pods and containers"}, "fullDescription": {"text": "Apply security context to your pods and containers"}, "help": {"text": "Apply security context to your pods and containers\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/ensure-securitycontext-is-applied-to-pods-and-containers"}, {"id": "CKV_K8S_30", "name": "Apply security context to your containers", "shortDescription": {"text": "Apply security context to your containers"}, "fullDescription": {"text": "Apply security context to your containers"}, "help": {"text": "Apply security context to your containers\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-28"}, {"id": "CKV_K8S_38", "name": "Ensure that Service Account Tokens are only mounted where necessary", "shortDescription": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "fullDescription": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "help": {"text": "Ensure that Service Account Tokens are only mounted where necessary\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-35"}, {"id": "CKV_K8S_23", "name": "Minimize the admission of root containers", "shortDescription": {"text": "Minimize the admission of root containers"}, "fullDescription": {"text": "Minimize the admission of root containers"}, "help": {"text": "Minimize the admission of root containers\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}, "helpUri": "https://docs.prismacloud.io/en/enterprise-edition/policy-reference/kubernetes-policies/kubernetes-policy-index/bc-k8s-22"}, {"id": "CKV2_K8S_6", "name": "Minimize the admission of pods which lack an associated NetworkPolicy", "shortDescription": {"text": "Minimize the admission of pods which lack an associated NetworkPolicy"}, "fullDescription": {"text": "Minimize the admission of pods which lack an associated NetworkPolicy"}, "help": {"text": "Minimize the admission of pods which lack an associated NetworkPolicy\nResource: Pod.default.release-name-admiral-server-test-healthcheck"}, "defaultConfiguration": {"level": "error"}}], "organization": "bridgecrew"}}, "results": [{"ruleId": "CKV_K8S_15", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Image Pull Policy should be Always"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/deployment.yaml"}, "region": {"startLine": 3, "endLine": 131, "snippet": {"text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: release-name-admiral-server\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: admiral-server\n      app.kubernetes.io/instance: release-name\n  template:\n    metadata:\n      annotations:\n        checksum/config: 85f8ac1e34f75e1bfadda6e6c8d40db26a37a7af651e4626a32ea6a9a8570ab0\n        checksum/secret: 610171903e02e1f37bbe960563a563116fcac3e7eec1ab10a58c80445ec01c9a\n        org.opencontainers.image.source: ghcr.io/mberwanger/admiral-server\n      labels:\n        app.kubernetes.io/name: admiral-server\n        app.kubernetes.io/instance: release-name\n    spec:\n      serviceAccountName: release-name-admiral-server\n      automountServiceAccountToken: false\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n        - name: admiral-server\n          securityContext:\n            allowPrivilegeEscalation: false\n            capabilities:\n              drop:\n              - ALL\n            readOnlyRootFilesystem: true\n            runAsGroup: 65534\n            runAsNonRoot: true\n            runAsUser: 65534\n            seccompProfile:\n              type: RuntimeDefault\n          image: \"ghcr.io/mberwanger/admiral-server:0.1.0\"\n          imagePullPolicy: IfNotPresent\n          # Warning: imagePullPolicy is not set to Always, which is recommended for production\n          ports:\n            - name: http\n              containerPort: 8080\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 60\n            periodSeconds: 30\n            timeoutSeconds: 10\n            successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 3\n          startupProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 18\n          env:\n            - name: ADMIRAL_DATABASE_URL\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: database-url\n            - name: ADMIRAL_OIDC_CLIENT_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: oidc-client-secret\n            - name: ADMIRAL_SESSION_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: session-secret\n            - name: ADMIRAL_STORAGE_ACCESS_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-access-key\n            - name: ADMIRAL_STORAGE_SECRET_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-secret-key\n          volumeMounts:\n            - name: config\n              mountPath: /app/config.yaml\n              subPath: config.yaml\n              readOnly: true\n            - name: tmp\n              mountPath: /tmp\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 1Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n      volumes:\n        - name: config\n          configMap:\n            name: release-name-admiral-server-config\n        - name: tmp\n          emptyDir: {}\n"}}}}]}, {"ruleId": "CKV_K8S_35", "ruleIndex": 1, "level": "error", "attachments": [], "message": {"text": "Prefer using secrets as files over secrets as environment variables"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/deployment.yaml"}, "region": {"startLine": 3, "endLine": 131, "snippet": {"text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: release-name-admiral-server\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: admiral-server\n      app.kubernetes.io/instance: release-name\n  template:\n    metadata:\n      annotations:\n        checksum/config: 85f8ac1e34f75e1bfadda6e6c8d40db26a37a7af651e4626a32ea6a9a8570ab0\n        checksum/secret: 610171903e02e1f37bbe960563a563116fcac3e7eec1ab10a58c80445ec01c9a\n        org.opencontainers.image.source: ghcr.io/mberwanger/admiral-server\n      labels:\n        app.kubernetes.io/name: admiral-server\n        app.kubernetes.io/instance: release-name\n    spec:\n      serviceAccountName: release-name-admiral-server\n      automountServiceAccountToken: false\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n        - name: admiral-server\n          securityContext:\n            allowPrivilegeEscalation: false\n            capabilities:\n              drop:\n              - ALL\n            readOnlyRootFilesystem: true\n            runAsGroup: 65534\n            runAsNonRoot: true\n            runAsUser: 65534\n            seccompProfile:\n              type: RuntimeDefault\n          image: \"ghcr.io/mberwanger/admiral-server:0.1.0\"\n          imagePullPolicy: IfNotPresent\n          # Warning: imagePullPolicy is not set to Always, which is recommended for production\n          ports:\n            - name: http\n              containerPort: 8080\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 60\n            periodSeconds: 30\n            timeoutSeconds: 10\n            successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 3\n          startupProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 18\n          env:\n            - name: ADMIRAL_DATABASE_URL\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: database-url\n            - name: ADMIRAL_OIDC_CLIENT_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: oidc-client-secret\n            - name: ADMIRAL_SESSION_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: session-secret\n            - name: ADMIRAL_STORAGE_ACCESS_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-access-key\n            - name: ADMIRAL_STORAGE_SECRET_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-secret-key\n          volumeMounts:\n            - name: config\n              mountPath: /app/config.yaml\n              subPath: config.yaml\n              readOnly: true\n            - name: tmp\n              mountPath: /tmp\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 1Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n      volumes:\n        - name: config\n          configMap:\n            name: release-name-admiral-server-config\n        - name: tmp\n          emptyDir: {}\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/deployment.yaml"}, "region": {"startLine": 3, "endLine": 131, "snippet": {"text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: release-name-admiral-server\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: admiral-server\n      app.kubernetes.io/instance: release-name\n  template:\n    metadata:\n      annotations:\n        checksum/config: 85f8ac1e34f75e1bfadda6e6c8d40db26a37a7af651e4626a32ea6a9a8570ab0\n        checksum/secret: 610171903e02e1f37bbe960563a563116fcac3e7eec1ab10a58c80445ec01c9a\n        org.opencontainers.image.source: ghcr.io/mberwanger/admiral-server\n      labels:\n        app.kubernetes.io/name: admiral-server\n        app.kubernetes.io/instance: release-name\n    spec:\n      serviceAccountName: release-name-admiral-server\n      automountServiceAccountToken: false\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n        - name: admiral-server\n          securityContext:\n            allowPrivilegeEscalation: false\n            capabilities:\n              drop:\n              - ALL\n            readOnlyRootFilesystem: true\n            runAsGroup: 65534\n            runAsNonRoot: true\n            runAsUser: 65534\n            seccompProfile:\n              type: RuntimeDefault\n          image: \"ghcr.io/mberwanger/admiral-server:0.1.0\"\n          imagePullPolicy: IfNotPresent\n          # Warning: imagePullPolicy is not set to Always, which is recommended for production\n          ports:\n            - name: http\n              containerPort: 8080\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 60\n            periodSeconds: 30\n            timeoutSeconds: 10\n            successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 3\n          startupProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 18\n          env:\n            - name: ADMIRAL_DATABASE_URL\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: database-url\n            - name: ADMIRAL_OIDC_CLIENT_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: oidc-client-secret\n            - name: ADMIRAL_SESSION_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: session-secret\n            - name: ADMIRAL_STORAGE_ACCESS_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-access-key\n            - name: ADMIRAL_STORAGE_SECRET_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-secret-key\n          volumeMounts:\n            - name: config\n              mountPath: /app/config.yaml\n              subPath: config.yaml\n              readOnly: true\n            - name: tmp\n              mountPath: /tmp\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 1Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n      volumes:\n        - name: config\n          configMap:\n            name: release-name-admiral-server-config\n        - name: tmp\n          emptyDir: {}\n"}}}}]}, {"ruleId": "CKV_K8S_43", "ruleIndex": 3, "level": "error", "attachments": [], "message": {"text": "Image should use digest"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/deployment.yaml"}, "region": {"startLine": 3, "endLine": 131, "snippet": {"text": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: release-name-admiral-server\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: admiral-server\n      app.kubernetes.io/instance: release-name\n  template:\n    metadata:\n      annotations:\n        checksum/config: 85f8ac1e34f75e1bfadda6e6c8d40db26a37a7af651e4626a32ea6a9a8570ab0\n        checksum/secret: 610171903e02e1f37bbe960563a563116fcac3e7eec1ab10a58c80445ec01c9a\n        org.opencontainers.image.source: ghcr.io/mberwanger/admiral-server\n      labels:\n        app.kubernetes.io/name: admiral-server\n        app.kubernetes.io/instance: release-name\n    spec:\n      serviceAccountName: release-name-admiral-server\n      automountServiceAccountToken: false\n      securityContext:\n        fsGroup: 65534\n        runAsGroup: 65534\n        runAsNonRoot: true\n        runAsUser: 65534\n        seccompProfile:\n          type: RuntimeDefault\n      containers:\n        - name: admiral-server\n          securityContext:\n            allowPrivilegeEscalation: false\n            capabilities:\n              drop:\n              - ALL\n            readOnlyRootFilesystem: true\n            runAsGroup: 65534\n            runAsNonRoot: true\n            runAsUser: 65534\n            seccompProfile:\n              type: RuntimeDefault\n          image: \"ghcr.io/mberwanger/admiral-server:0.1.0\"\n          imagePullPolicy: IfNotPresent\n          # Warning: imagePullPolicy is not set to Always, which is recommended for production\n          ports:\n            - name: http\n              containerPort: 8080\n              protocol: TCP\n          livenessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 60\n            periodSeconds: 30\n            timeoutSeconds: 10\n            successThreshold: 1\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 30\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 3\n          startupProbe:\n            httpGet:\n              path: /healthcheck\n              port: http\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            timeoutSeconds: 5\n            successThreshold: 1\n            failureThreshold: 18\n          env:\n            - name: ADMIRAL_DATABASE_URL\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: database-url\n            - name: ADMIRAL_OIDC_CLIENT_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: oidc-client-secret\n            - name: ADMIRAL_SESSION_SECRET\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: session-secret\n            - name: ADMIRAL_STORAGE_ACCESS_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-access-key\n            - name: ADMIRAL_STORAGE_SECRET_KEY\n              valueFrom:\n                secretKeyRef:\n                  name: release-name-admiral-server-secret\n                  key: storage-secret-key\n          volumeMounts:\n            - name: config\n              mountPath: /app/config.yaml\n              subPath: config.yaml\n              readOnly: true\n            - name: tmp\n              mountPath: /tmp\n          resources:\n            limits:\n              cpu: 1000m\n              memory: 1Gi\n            requests:\n              cpu: 500m\n              memory: 512Mi\n      volumes:\n        - name: config\n          configMap:\n            name: release-name-admiral-server-config\n        - name: tmp\n          emptyDir: {}\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/service.yaml"}, "region": {"startLine": 3, "endLine": 23, "snippet": {"text": "apiVersion: v1\nkind: Service\nmetadata:\n  name: release-name-admiral-server\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: http\n      protocol: TCP\n      name: http\n  selector:\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/serviceaccount.yaml"}, "region": {"startLine": 3, "endLine": 14, "snippet": {"text": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: release-name-admiral-server\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\nautomountServiceAccountToken: false\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/configmap.yaml"}, "region": {"startLine": 3, "endLine": 49, "snippet": {"text": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: release-name-admiral-server-config\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\ndata:\n  config.yaml: |\n    server:\n      listener:\n        address: \"0.0.0.0\"\n        port: 8080\n\n    database:\n      # Connection will be provided via environment variable\n      maxOpenConns: 25\n      maxIdleConns: 25\n      connMaxLifetime: \"5m\"\n\n    auth:\n      oidcIssuer: \"https://auth.example.com\"\n      oidcClientId: \"admiral-client\"\n      # oidcClientSecret will be provided via environment variable\n      oidcScopes: [\"openid\", \"profile\", \"email\"]\n      # sessionSecret will be provided via environment variable\n      sessionMaxAge: \"24h\"\n\n    storage:\n      type: \"s3\"\n      endpoint: \"\"\n      manifestsBucket: \"admiral-manifests\"\n      revisionsBucket: \"admiral-revisions\"\n      # accessKey and secretKey will be provided via environment variables\n      useSSL: true\n\n    temporal:\n      hostPort: \"temporal.example.com:7233\"\n      namespace: \"admiral\"\n\n    logging:\n      level: \"info\"\n      format: \"json\"\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/secret.yaml"}, "region": {"startLine": 3, "endLine": 20, "snippet": {"text": "apiVersion: v1\nkind: Secret\nmetadata:\n  name: release-name-admiral-server-secret\n  namespace: \"default\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\ntype: Opaque\ndata:\n  database-url: cG9zdGdyZXM6Ly9hZG1pcmFsOnRlc3QtcGFzc3dvcmRAcG9zdGdyZXMuZXhhbXBsZS5jb206NTQzMi9hZG1pcmFsP3NzbG1vZGU9ZGlzYWJsZQ==\n  oidc-client-secret: dGVzdC1zZWNyZXQ=\n  session-secret: dGVzdC1zZXNzaW9uLXNlY3JldA==\n  storage-access-key:\n  storage-secret-key:\n"}}}}]}, {"ruleId": "CKV_K8S_37", "ruleIndex": 4, "level": "error", "attachments": [], "message": {"text": "Minimize the admission of containers with capabilities assigned"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_31", "ruleIndex": 5, "level": "error", "attachments": [], "message": {"text": "Ensure that the seccomp profile is set to docker/default or runtime/default"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_8", "ruleIndex": 6, "level": "error", "attachments": [], "message": {"text": "Liveness Probe Should be Configured"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_20", "ruleIndex": 7, "level": "error", "attachments": [], "message": {"text": "Containers should not run with allowPrivilegeEscalation"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_15", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Image Pull Policy should be Always"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_40", "ruleIndex": 8, "level": "error", "attachments": [], "message": {"text": "Containers should run as a high UID to avoid host conflict"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_22", "ruleIndex": 9, "level": "error", "attachments": [], "message": {"text": "Use read-only filesystem for containers where possible"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_9", "ruleIndex": 10, "level": "error", "attachments": [], "message": {"text": "Readiness Probe Should be Configured"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_28", "ruleIndex": 11, "level": "error", "attachments": [], "message": {"text": "Minimize the admission of containers with the NET_RAW capability"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_29", "ruleIndex": 12, "level": "error", "attachments": [], "message": {"text": "Apply security context to your pods and containers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_30", "ruleIndex": 13, "level": "error", "attachments": [], "message": {"text": "Apply security context to your containers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_38", "ruleIndex": 14, "level": "error", "attachments": [], "message": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_23", "ruleIndex": 15, "level": "error", "attachments": [], "message": {"text": "Minimize the admission of root containers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_37", "ruleIndex": 4, "level": "error", "attachments": [], "message": {"text": "Minimize the admission of containers with capabilities assigned"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_31", "ruleIndex": 5, "level": "error", "attachments": [], "message": {"text": "Ensure that the seccomp profile is set to docker/default or runtime/default"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_8", "ruleIndex": 6, "level": "error", "attachments": [], "message": {"text": "Liveness Probe Should be Configured"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_20", "ruleIndex": 7, "level": "error", "attachments": [], "message": {"text": "Containers should not run with allowPrivilegeEscalation"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_15", "ruleIndex": 0, "level": "error", "attachments": [], "message": {"text": "Image Pull Policy should be Always"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_40", "ruleIndex": 8, "level": "error", "attachments": [], "message": {"text": "Containers should run as a high UID to avoid host conflict"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_22", "ruleIndex": 9, "level": "error", "attachments": [], "message": {"text": "Use read-only filesystem for containers where possible"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_9", "ruleIndex": 10, "level": "error", "attachments": [], "message": {"text": "Readiness Probe Should be Configured"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_28", "ruleIndex": 11, "level": "error", "attachments": [], "message": {"text": "Minimize the admission of containers with the NET_RAW capability"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_29", "ruleIndex": 12, "level": "error", "attachments": [], "message": {"text": "Apply security context to your pods and containers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_30", "ruleIndex": 13, "level": "error", "attachments": [], "message": {"text": "Apply security context to your containers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_38", "ruleIndex": 14, "level": "error", "attachments": [], "message": {"text": "Ensure that Service Account Tokens are only mounted where necessary"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_21", "ruleIndex": 2, "level": "error", "attachments": [], "message": {"text": "The default namespace should not be used"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_23", "ruleIndex": 15, "level": "error", "attachments": [], "message": {"text": "Minimize the admission of root containers"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}]}, {"ruleId": "CKV_K8S_43", "ruleIndex": 3, "level": "warning", "attachments": [], "message": {"text": "Image should use digest"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "var/folders/ny/y96dqykd7pj106szmb76gfnc0000gp/T/tmp121nudxp/admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}], "suppressions": [{"kind": "inSource", "justification": "Test pods use stable tags for simplicity"}]}, {"ruleId": "CKV_K8S_43", "ruleIndex": 3, "level": "warning", "attachments": [], "message": {"text": "Image should use digest"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "var/folders/ny/y96dqykd7pj106szmb76gfnc0000gp/T/tmp121nudxp/admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}], "suppressions": [{"kind": "inSource", "justification": "Test pods use stable tags for simplicity"}]}, {"ruleId": "CKV2_K8S_6", "ruleIndex": 16, "level": "warning", "attachments": [], "message": {"text": "Minimize the admission of pods which lack an associated NetworkPolicy"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "var/folders/ny/y96dqykd7pj106szmb76gfnc0000gp/T/tmp121nudxp/admiral-server/templates/tests/test-healthcheck.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-healthcheck\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"2\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: curl\n      image: curlimages/curl:8.8.0\n      command: ['curl']\n      args: ['-f', 'http://release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}], "suppressions": [{"kind": "inSource", "justification": "Test pods are ephemeral and don't require NetworkPolicy"}]}, {"ruleId": "CKV2_K8S_6", "ruleIndex": 16, "level": "warning", "attachments": [], "message": {"text": "Minimize the admission of pods which lack an associated NetworkPolicy"}, "locations": [{"physicalLocation": {"artifactLocation": {"uri": "var/folders/ny/y96dqykd7pj106szmb76gfnc0000gp/T/tmp121nudxp/admiral-server/templates/tests/test-connection.yaml"}, "region": {"startLine": 3, "endLine": 32, "snippet": {"text": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: \"release-name-admiral-server-test-connection\"\n  labels:\n    helm.sh/chart: admiral-server-0.1.0\n    app.kubernetes.io/name: admiral-server\n    app.kubernetes.io/instance: release-name\n    app.kubernetes.io/version: \"0.1.0\"\n    app.kubernetes.io/managed-by: Helm\n  annotations:\n    \"helm.sh/hook\": test\n    \"helm.sh/hook-weight\": \"1\"\n    \"helm.sh/hook-delete-policy\": before-hook-creation\n    checkov.io/skip1: CKV2_K8S_6=Test pods are ephemeral and don't require NetworkPolicy\n    checkov.io/skip2: CKV_K8S_43=Test pods use stable tags for simplicity\nspec:\n  restartPolicy: Never\n  containers:\n    - name: wget\n      image: busybox:1.36\n      command: ['wget']\n      args: ['--spider', '--timeout=10', 'release-name-admiral-server:8080/healthcheck']\n      resources:\n        limits:\n          cpu: 100m\n          memory: 128Mi\n        requests:\n          cpu: 50m\n          memory: 64Mi\n"}}}}], "suppressions": [{"kind": "inSource", "justification": "Test pods are ephemeral and don't require NetworkPolicy"}]}]}]}