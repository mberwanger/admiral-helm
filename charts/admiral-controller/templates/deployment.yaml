apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "admiral-controller.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "admiral-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.admiral.replicaCount }}
  selector:
    matchLabels:
      {{- include "admiral-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "admiral-controller.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.admiral.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "admiral-controller.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.rbac.create }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.admiral.image.repository }}:{{ .Values.admiral.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.admiral.image.pullPolicy }}
          {{- if .Values.admiral.image.pullPolicy | default "IfNotPresent" | ne "Always" }}
          # Warning: imagePullPolicy is not set to Always, which is recommended for production
          {{- end }}
          {{- if .Values.metrics.enabled }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: metrics
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: metrics
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.startupProbe.path }}
              port: metrics
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          {{- end }}
          env:
            - name: ADMIRAL_SERVER_HOST_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "admiral-controller.fullname" . }}-secret
                  key: server-host-port
            - name: ADMIRAL_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "admiral-controller.fullname" . }}-secret
                  key: auth-token
            - name: ADMIRAL_WORKER_CONCURRENCY
              value: {{ .Values.admiral.config.worker.concurrency | quote }}
            - name: ADMIRAL_WORKER_NAMESPACE
              value: {{ .Values.admiral.config.worker.namespace | quote }}
            - name: ADMIRAL_LOG_LEVEL
              value: {{ .Values.admiral.config.logging.level | quote }}
            - name: ADMIRAL_LOG_FORMAT
              value: {{ .Values.admiral.config.logging.format | quote }}
            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.admiral.resources | nindent 12 }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.admiral.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.admiral.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.admiral.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}